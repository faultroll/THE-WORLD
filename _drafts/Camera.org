

* 需求分解
** 视频输出
- 分辨率/制式
- 接口/格式/色域
- 网络
  - 码率控制
  - 三码流
  - 抓图（jpeg）
** 音频输出
** 图像控制
- PTZFS(pan, tilt, zoom, focus, iris)
  - 机芯控制
- 图像
  - ISP
    - 视频参数
    - 白平衡
    - 聚集
    - 降噪
    - 曝光
    - 强光抑制
    - 滤镜
    - 防抖
    - 其他
      - 防红溢出
      - 亮度均匀
  - OSD
    - TAG/date
    - mask/mosaic
  - 场景（组合）
  - 冻结
- 客户端
  - 按键板
  - web
  - clientdemo
  - 4200
  - 232/485/云台
- 参数保存
  - file/flash
  - xml/database
** 其他
- 快速启动
- 加密信息/平台区分/系统信息
- 升级
- gpio控制（led等）

* 概要设计
** 示意图
      +-------------+                                 +---------------+
      |1-加密信息   |      +-----------------------+  |1-platformdiff |
      |             +----->+1-消息同步(mq)   ----  +->+模块初始化/能力|
      +-------------+      |2-功能提取(mod) (core) |  +---------------+
                           |3-...            ----  +--
      +-------------+   /->+-----------------------+  \->-------------+
      |2-request    +---                                |2-功能查询   |
      |功能         |                                   |分发消息     |
      +-------------+                                   +-------------+
** core
libnng（inproc://模式）
- message分发
  - 调用模块：调用功能（不分dsp、isp、机芯这种实现模块，而是图像/视频这种）
    多对一/双向：多个req/rep
  - 功能模块：抽象功能
    一对多/双向：survey模式（每个都会收到） or pub/sub模式（仅对应会收到）+push/pull
    选用survey模式
  - 示意图
                                      8. 图像控制模块并响应
           7. img+exp+data            3. 图像控制模块收到img并响应，其他模块不响应
           1. img+stria               2. survey发送img+stria
           +--------------------+     +----------------------+
           |                    |     |                      |
  +--------+--+              +--+-----+--+                +--+--------+
  |去横纹算法 |              | core      |                |图像控制   |
  |           |              |           |                |           |
  +--------+--+              +--+-----+--+                +--+--------+
           |                    |     |                      |
           +--------------------+     +----------------------+
           6. img+stria+data          4. 图像控制模块计算的exposure time
           10. img+exp+ok             5. survey发送img+stria+data
                                      9. 图像控制模块设置exposure time，返回img+exp+ok
- 问题
  - 消息函数接口怎么写？
    思考funcA和funcB，均调用同一个接口caller(enum, data)，其中宏可以自己定义，这个函数需要进行4个步骤：form, send(to core), recv(from core), return，这样需要考虑recv的msg包到底哪个才是send过去的；需要考虑：跟core是长连接还是短连接、多线程、recv是否阻塞
  - 怎么返回给该次调用？（6, 10可以通过req/rep，但是5, 9不行）
    通过包内容来判断（magic/tid），这样core只关注消息分发，而不必关注消息解析
  - 调用模块生成参数（data怎么组成），功能模块怎么解析参数（data怎么使用）
    协议，api-design(restful, soap, rpc, ...)
- 方案
  1) survey+survey
     core仅负责分发，每个module均会收到所有包，根据magic自行解决
  2) req/rep+survey（不适合，因为会导致阻塞？）
     连上时获得magic，并在request包内加上；core根据caller magic进行reply，called一致
  3) push/pull&pub/sub+pub/sub&push/pull
     https://tisyang.github.io/post/2019-02-22-think-about-nng-library/
     一对多都用pub/sub，一对一都用push/pull
     两个url（一个pub/sub，一个push/pull），只初始化一次，caller的sub的sock一次性初始化完全部，并存在stack中，用的时候进行pop/push，即如下图
     +----------+       +----------+       +----------+
     |callerfunc|       |coretask  |       |calledtask|
     |----------|       |----------|       |----------|    +----------+
     |send(push)+------->recv(pull)<--\ /-->recv(sub) |    |proc(msg) |
     |----------|       |----------|   X   |----------|    |----------|
     |recv(sub) <-------+send(pub) +--/ \--+createtask<----+send(push)|
     +----------+       +----------+       +----------+    +----------+
     其中msg由{from, to, data}组成，proc(msg)时即调用真正的功能函数进行处理，又将from和to交换
** 视频输出

* 机芯（Camera Module）
接口暴露，开发便利，步骤拆分（启动等）
** 何为机芯
图像采集-->视频/码流输出，图像/视频控制，最基本的跟图像/视频相关的设备及软件
#+BEGIN_QUOTE
摄像机机芯主要由两大部分构成，即光学部分和软硬件。
光学部分是一体机机芯的成像系统，通常称一体机镜头。一体机镜头是一体机机芯的核心部件，直接影响一体机机芯的品质。它的关键部件主要包括：光圈、马达和滤光片切换等部件。
软硬件系统的核心技术在于自动聚焦，聚焦速度和效果的好坏，直接影响到用户对监控现场图像的抓取和录像。目前，自动聚焦的实现方式有主动式和被动式两种，其性能可以从聚焦精准度、聚焦速度、定焦时的稳定性三个方面来评价。
#+END_QUOTE
** 组成
*** 光学部分
- 镜头
- sensor
- 电机控制系统（有/无反馈）
  ZFS: zoom+focus+iris
  无反馈的需要记录曲线等信息
*** 软硬件平台
视频线、音频线、控制线
- vi/ai --> isp --> vpss --> vo/venc/ao/aenc/... --> hdmi/sdi/web/sdk/...
- 接口控制
  - 图像参数（图像增强/电机控制/缩放/滤镜等）
  - 视频参数（码流/输出等）
  - 音频参数（混合流）
  - 其他控制（OSD等，机芯只负责提供缓冲区，并将缓冲区叠加至码流，后续需自行开发？？）
- 对外不透明
  - 接口
  - 协议对接（不属于机芯组件，机芯负责出封装后的流，并能对流进行控制，后续需要自行开发）
** 问题
- 双目/多目相机
- 型号区分/能力/可维护性
- 单纯功能性
  dsp部分即可，app感觉无用
  - dsp（机芯本质）
    功能性，库性质
    - 通信
    - 状态/参数
    - 启动/看门狗?
  - app
    - 控制（按键板/web/sdk/...）
    - 协议（ONVIF/...）
    - 额外功能（PT控制/gpio/...）


整个系统是
- 多in多out
  (1234..)a---b(1234...)
  取节点分析，拆分成两类
  - 多in一out
    (1234..)a
    相机模式
    采集/拆分
  - 一in多out
    b(1234...)
    主机模式
    显示/融合
- 仿造ISAPI模式（xml树）
  整个系统的控制流（xml树）
  database表，类似
  key | 多in一out | 一in多out
  - 多in一out
    采集-->ISP-->编码-->封装
    通道（一分多）
    电机控制
  - 一in多out
    解封装-->解码-->OSD-->显示
    通道（多合一）

