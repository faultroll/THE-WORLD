幻想体系的建立
  何为幻想体系：
     空想科学，dream room production
  剖析-构筑的层次（logic-math-…）
     任何错误可以指出
     知识体系的整理，逻辑与数学

- core
  逻辑/形式系统
  50%-yes 50%-no ?
  - abstract
    - 集合
    - 群（运算/函数）
      函数也是数据
    - basic
      - 观测/物理/化学/生物/...
        - experiemnt-->reality
          - 工程
            pattern
- 描述/语言/language
  也是一种形式系统，metadata/primitive
   - 艺术

推理/形式系统/逻辑/语言/集合/群，其可能的关系（关于语言为什么排在这么core的位置，可以看sicp）
推理+形式系统 --> 集合 --> 群 --> 
              |-----------------> 逻辑/语言
无论是什么关系，总有一个core，从core又可以推理出以上这些基础，而 集合/群 --> 数学 --> 其他科学 --> 工程 这条通路应该是没有问题的
对于数学以下（以下=以及之下），可以粗略的认为是abstract中的core（待有能力再对其做研究，暂且当作黑盒），以数学为核心进行构筑（不同世界的构筑）其他科学
- 理论
  数学中的 代数/几何/...
  - 物理
    - 力学
      坐标/极限
      - 宏观
      - 微观
        概率
  - 化学
    构筑在物理之上（物理化学）？
- 实验
  数学中的 概率/统计/...
  - 生物
    没有理论生物，只有实验生物（从依赖的数学角度看）
  - 化学
  - 物理
    观测？


幻想体系例子
  现有的（游戏等）分析
    符合理论，但现实中无法实现（工程原因）
    另外一套理论
    不符合理论（构筑失败）
  从最基础的开始构筑
 
如何创造和设定一个架空世界：
https://www.zhihu.com/question/20583802
https://tieba.baidu.com/p/4525597499
狗头人之世界创建指南

* 蒸汽与奥数，多元宇宙，集合，哲学问题思想实验归类，时间不存在的只有因果（卡车悖论？）
  1. 特休斯之船与save/load，纳米生物
  2. 多元宇宙穿越与三个我（本我超我）
  3. 博弈？魔女与魔法师（男-30岁前嘿嘿嘿-无法成为魔法师，女-30岁前嘿嘿嘿-才能成为魔女）
  4. 气世界：KAI（kensai），武侠？仙侠？ 
  5. 火与雾
  6. 元素世界：血元素，肌肉=血元素＋水元素
  7. 脊椎寄生虫－zombie
  8. emacs与vi的战争，new一个
  9. 法则完备集

括号内是维度
宇宙（3）－多元宇宙集（相同法则，连续，易穿梭）（6）－近似宇宙集（法则近似，连续，难穿梭）（9）－宇宙集合（法则完全不一样，离散，几乎不可能穿梭）（12）
熵增系统－能量逸散？－推出宇宙集中间的？生成新宇宙
the dark tower

现代（骷髅主角的死法），骷髅（被巨魔法师拉起来，不是唯一的骷髅，拉起来的原因－知识记忆，巨魔法师的故事－奥术与蒸汽，不可定位性），异界（新世界，可定位，巨魔法师占领－实现愿望），跟虫兽（怪猎模式，灵魂&意识的根本－雷元素，个体意识与意识网络），元素生命穿越至现实－纳米机器人
元素上色学，元素构造学（骨头=土＋ 生命，血=水＋生命，肉=土＋水＋生命，脑子 =雷＋生命）

分层结构
科学家：思想者，实现者；第一次革命（力量的不对等，实现者win），第二次革命（家庭束缚，镇压，实现者win），第三次革命（0号元素的发现，心灵异能，draw），思想者进化（纯脑子？），第四次革命（种族战争，主角乱入？）

性别之战，sex is about power（恶魔的诅咒，神的样子，神与恶魔，语言是什么）
必胜的败局，博弈论与概率论

男女交配为什么女方是弱势群体：一方面是痕迹（刻刀与橡皮泥？催产素？），一方面是力量（power？）；炮友-解决生理问题，抛开痕迹不谈，但力量？这是上半身和下半身的对抗（感情？需求？互相影响？）！往往以上半身失败而告终？

逆转td模式，扣血变加血（增加路程变减少路程-加速，传送）：守护者（顾客）持续受到攻击，补血物品（食物）经过特定路线（食物传送带）至守护者，回血效果可以通过“攻击”（料理）增加
合作对抗模式：4家塔防，借钱，积分独立，只有积分最高的获胜，不借钱赢不了，多种借钱方式；有角色是卧底，跟别人相反（借到一次基本就赢了？）模式是加血模式？卧底是扣血？

法术电路
能源=蓝条，控制模块=开关？放大器？，激发模块=用电模块？，元素转化模块=用电模块？
模块+元素解释魔法（原理，复杂程度，等级，魔网），串并联，超魔，施法距离
eg. 蓝条-元素转化模块（火）-元素控制模块（附着）=火焰之手
级联衰减，并联不稳定，法术反噬的多个阶段
克隆人（罐装人）
速成克隆人导致灵魂大量涌入，劣币驱逐良币，深渊的最大危机

神秘侧，科技侧：
无论怎么样，一个 技能 要造成 伤害 需要经过以下过程（参考《旧日篇章》模块部分） 
攻击侧：能源--转化--输出
防守侧：闪避--抵抗--受伤
攻击侧和防守侧为多对多
依次分析
        | 神秘侧 | 科技侧
能源| 魔法/精神（非物理能量） | 电池/生物（物理能量：电能/生物质能）
转化| 魔网/灵能/仙术（不可见黑箱） | 机械/肌肉（做功/转化）
输出| 精神/灵魂/同科技侧（独特的点是针对神秘侧独有的结构破坏，其余同科技侧） | 子弹/激光/生体飞弹/切割（动能/热能等对生物/分子结构的破坏）
闪避| 护盾/虚无（神秘侧必中较多（毕竟神秘/因果律武器）） | 盾牌/躲闪（阻止其作用）
抵抗| 对应的抗性（各种免疫） | 硬度/结构稳定性/再生（结构破坏难易程度）
本质上一样，攻击都是为了破坏结构，使其不能工作，防御都是为了降低被破坏导致失去功能的可能，多对多的特性丰富选择的难度

恐惧的原因（未知？生命？伤害？）
维棋：暗黑塔，宇宙为旗子（游戏王，陷阱卡，宇宙内对抗），模块（宇宙到卡牌的过程，自行组成）和耗费（可计算，防止谁屌说谁就屌）

五年计划，十年计划，几辈子的计划（人是核心，怎么让后辈的人继续而不是中断）
一辈子能做的事太少，要从几辈子来考虑
计划：
30前：活着，知识库，独立空间，钱钱钱
30－40：领养，教育，国外
目标：
松散联合体（家族，收养，人口，教父？）－企业国（辐射学院，产业科学）－赛博鲁斯
梦想：
造物主（机械生命），宇宙探索（宇宙文明），生物科技（殖装母巢）











硬件行业标准？软件开源维护？工作环境统一搭建docker
自动测试程序（想想就好）
快速硬件检测方法（demo机器，要检测的硬件替换看正不正常）

app操作函数化，表格化
工程管理？软件工程？目录结构？
外来库：
release版带版本号（git/svn号），除非是要跟别的共用，最后都编译到给外面的文件中（.so库静态编译）
debug版模块化给，方便更换（.so动态编译）
？？每次make，rm生成的文件，但不rm中间文件？
.h文件需要单独编译透过（解耦）
extern变量（注意） 
OBJS:obj/%.o:src/%.c
make svn：
1. svn版本号（LANG=C; svn info | grep "Revision:" -i | sed -e "s/Revision: //g"），svn服务器端路径（LANG=C; svn info | grep "URL:" -i | sed -e "s/URL: //g"）
``` sh
# 预编译头
dir=./inc/his
fileset=`find "./inc/his" -name "*.h" -printf "%f\n" | grep -v "hiPCH" | sort`
exclude="hi_isp_bin.h list.h"
if [ -e ${dir}/hiPCH.h ]
then
    rm ${dir}/hiPCH.h
fi

echo "#ifndef __HI_HIPCH_H__" >> ${dir}/hiPCH.h
echo "#define __HI_HIPCH_H__" >> ${dir}/hiPCH.h
# 版本信息，URL仍需改进（不是最上层的URL，现在只能通过cd命令，修改执行svn info的位置来修复）
LANG=C;
revision=`svn info | grep "Revision:" -i | sed -e "s/Revision: //g"`
url=`svn info | grep "URL:" -i | sed -e "s/URL: //g"` # | sed -e "s/https:\/\///g"
version="(\"[${url}][${revision}]\")"
echo "#define __VER_SVN__ ${version}" >> ${dir}/hiPCH.h
echo "" >> ${dir}/hiPCH.h
for file in ${fileset}
do
    inc="#include \"${file}\""
    # if echo "${exclude[@]}" | grep -w "${file}" &>/dev/null
    if [[ ${exclude} =~ ${file} ]]
    then
        inc="// ${inc}"
    fi
    echo ${inc} >> ${dir}/hiPCH.h
done
echo "" >> ${dir}/hiPCH.h
echo "#endif" >> ${dir}/hiPCH.h
```
https://stackoverflow.com/questions/9128344/how-to-get-svn-remote-repository-url
https://stackoverflow.com/questions/16248/getting-the-subversion-repository-number-into-code
2. 其他无关紧要（日期，客户端路径等），以保证代码和编译出来的唯一对应（参考内核和模块）
reproducible builds：https://www.reddit.com/r/compsci/comments/3kmlwg/how_exactly_do_reproducible_builds_work/
https://www.gnu.org/software/guix/blog/2018/reproducible-builds-summit-4th-edition/
-Werror=date-time：https://stackoverflow.com/questions/34798767/compile-driver-on-linux-with-make
https://blog.csdn.net/mike8825/article/details/52057637
ar -D（reproducible build）：https://linux.die.net/man/1/ar
svn日期等信息单独存一个文件（txt/xml/ini这种），然后软件去读取，这样既可以保留编译日期版本等信息，又能做到reproducible
3. LANG会影响map和asm，-flto每次编译的函数编号不一致
```
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
```
消除LANG影响，不要用-flto


Feature Freeze, regression bug
git flow：https://www.oschina.net/translate/a-successful-git-branching-model
svn模拟git flow：https://blog.csdn.net/liumiaocn/article/details/81942182

```
方言/语法糖 跟 portable/耦合性 之间的矛盾
eg. 类似
#define MK_STRUCT(_type, ...) (_type){__VA_ARGS__}
debug_printf(lvl, ...)
如果大量运用在代码中，那么将这个当作一个模块，这部分代码就是跟模块强耦
合；想单独剥离出代码进行移植，就得先移植这个模块
如何平衡耦合性和移植性之间的矛盾？
当这些东西运用的多的时候（比如在github上有几千的star），这个就变成一个
基础库；更上一层，当这个东西被大机构（比如苹果/firefox）运用的多了，就变成了方
言（obj-c前身），当这些方言可以通过bootstrap进行自举，这就变成了新的“语言”
（object-c/rust）
```
